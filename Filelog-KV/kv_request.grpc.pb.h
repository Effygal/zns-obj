// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kv_request.grpc.proto
// Protobuf C++ Version: 5.27.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_kv_5frequest_2egrpc_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_kv_5frequest_2egrpc_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kv_5frequest_2egrpc_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kv_5frequest_2egrpc_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kv_5frequest_2egrpc_2eproto;
class KVRequest;
struct KVRequestDefaultTypeInternal;
extern KVRequestDefaultTypeInternal _KVRequest_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum KVRequest_RequestType : int {
  KVRequest_RequestType_GET = 0,
  KVRequest_RequestType_PUT = 1,
  KVRequest_RequestType_DELETE = 2,
  KVRequest_RequestType_KVRequest_RequestType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  KVRequest_RequestType_KVRequest_RequestType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool KVRequest_RequestType_IsValid(int value);
extern const uint32_t KVRequest_RequestType_internal_data_[];
constexpr KVRequest_RequestType KVRequest_RequestType_RequestType_MIN = static_cast<KVRequest_RequestType>(0);
constexpr KVRequest_RequestType KVRequest_RequestType_RequestType_MAX = static_cast<KVRequest_RequestType>(2);
constexpr int KVRequest_RequestType_RequestType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
KVRequest_RequestType_descriptor();
template <typename T>
const std::string& KVRequest_RequestType_Name(T value) {
  static_assert(std::is_same<T, KVRequest_RequestType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to RequestType_Name().");
  return KVRequest_RequestType_Name(static_cast<KVRequest_RequestType>(value));
}
template <>
inline const std::string& KVRequest_RequestType_Name(KVRequest_RequestType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<KVRequest_RequestType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool KVRequest_RequestType_Parse(absl::string_view name, KVRequest_RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<KVRequest_RequestType>(
      KVRequest_RequestType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class KVRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:KVRequest) */ {
 public:
  inline KVRequest() : KVRequest(nullptr) {}
  ~KVRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KVRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline KVRequest(const KVRequest& from) : KVRequest(nullptr, from) {}
  inline KVRequest(KVRequest&& from) noexcept
      : KVRequest(nullptr, std::move(from)) {}
  inline KVRequest& operator=(const KVRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline KVRequest& operator=(KVRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KVRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const KVRequest* internal_default_instance() {
    return reinterpret_cast<const KVRequest*>(
        &_KVRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(KVRequest& a, KVRequest& b) { a.Swap(&b); }
  inline void Swap(KVRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KVRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KVRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<KVRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KVRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KVRequest& from) { KVRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KVRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "KVRequest"; }

 protected:
  explicit KVRequest(::google::protobuf::Arena* arena);
  KVRequest(::google::protobuf::Arena* arena, const KVRequest& from);
  KVRequest(::google::protobuf::Arena* arena, KVRequest&& from) noexcept
      : KVRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using RequestType = KVRequest_RequestType;
  static constexpr RequestType GET = KVRequest_RequestType_GET;
  static constexpr RequestType PUT = KVRequest_RequestType_PUT;
  static constexpr RequestType DELETE = KVRequest_RequestType_DELETE;
  static inline bool RequestType_IsValid(int value) {
    return KVRequest_RequestType_IsValid(value);
  }
  static constexpr RequestType RequestType_MIN = KVRequest_RequestType_RequestType_MIN;
  static constexpr RequestType RequestType_MAX = KVRequest_RequestType_RequestType_MAX;
  static constexpr int RequestType_ARRAYSIZE = KVRequest_RequestType_RequestType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* RequestType_descriptor() {
    return KVRequest_RequestType_descriptor();
  }
  template <typename T>
  static inline const std::string& RequestType_Name(T value) {
    return KVRequest_RequestType_Name(value);
  }
  static inline bool RequestType_Parse(absl::string_view name, RequestType* value) {
    return KVRequest_RequestType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 3,
    kRequestTypeFieldNumber = 1,
    kKeyFieldNumber = 2,
  };
  // string value = 3;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // .KVRequest.RequestType request_type = 1;
  void clear_request_type() ;
  ::KVRequest_RequestType request_type() const;
  void set_request_type(::KVRequest_RequestType value);

  private:
  ::KVRequest_RequestType _internal_request_type() const;
  void _internal_set_request_type(::KVRequest_RequestType value);

  public:
  // int32 key = 2;
  void clear_key() ;
  ::int32_t key() const;
  void set_key(::int32_t value);

  private:
  ::int32_t _internal_key() const;
  void _internal_set_key(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:KVRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      23, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_KVRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KVRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr value_;
    int request_type_;
    ::int32_t key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kv_5frequest_2egrpc_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// KVRequest

// .KVRequest.RequestType request_type = 1;
inline void KVRequest::clear_request_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_ = 0;
}
inline ::KVRequest_RequestType KVRequest::request_type() const {
  // @@protoc_insertion_point(field_get:KVRequest.request_type)
  return _internal_request_type();
}
inline void KVRequest::set_request_type(::KVRequest_RequestType value) {
  _internal_set_request_type(value);
  // @@protoc_insertion_point(field_set:KVRequest.request_type)
}
inline ::KVRequest_RequestType KVRequest::_internal_request_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::KVRequest_RequestType>(_impl_.request_type_);
}
inline void KVRequest::_internal_set_request_type(::KVRequest_RequestType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_ = value;
}

// int32 key = 2;
inline void KVRequest::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_ = 0;
}
inline ::int32_t KVRequest::key() const {
  // @@protoc_insertion_point(field_get:KVRequest.key)
  return _internal_key();
}
inline void KVRequest::set_key(::int32_t value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:KVRequest.key)
}
inline ::int32_t KVRequest::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_;
}
inline void KVRequest::_internal_set_key(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_ = value;
}

// string value = 3;
inline void KVRequest::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& KVRequest::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KVRequest.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KVRequest::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:KVRequest.value)
}
inline std::string* KVRequest::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:KVRequest.value)
  return _s;
}
inline const std::string& KVRequest::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void KVRequest::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* KVRequest::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* KVRequest::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KVRequest.value)
  return _impl_.value_.Release();
}
inline void KVRequest::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:KVRequest.value)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::KVRequest_RequestType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::KVRequest_RequestType>() {
  return ::KVRequest_RequestType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_kv_5frequest_2egrpc_2eproto_2epb_2eh
